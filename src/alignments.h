// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _alignments{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u64 * k1, const u64 * k2);
  const size_t sizes[3];

  u64 * id;
  alignment * horizontal;
  alignment * vertical;
  icy_mem * id_area;
  icy_mem * horizontal_area;
  icy_mem * vertical_area;
}alignments;

alignments * alignments_create(const char * optional_name);
void alignments_set(alignments * table, u64 id, alignment horizontal, alignment vertical);
void alignments_insert(alignments * table, u64 * id, alignment * horizontal, alignment * vertical, size_t count);
void alignments_lookup(alignments * table, u64 * keys, size_t * out_indexes, size_t count);
void alignments_remove(alignments * table, u64 * keys, size_t key_count);
void alignments_clear(alignments * table);
void alignments_unset(alignments * table, u64 key);
bool alignments_try_get(alignments * table, u64 * id, alignment * horizontal, alignment * vertical);
void alignments_print(alignments * table);
size_t alignments_iter(alignments * table, u64 * keys, size_t keycnt, u64 * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
