// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _u64_to_vec2_table{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u64 * k1, const u64 * k2);
  const size_t sizes[3];

  u64 * key;
  f32 * x;
  f32 * y;
  icy_mem * key_area;
  icy_mem * x_area;
  icy_mem * y_area;
}u64_to_vec2_table;

u64_to_vec2_table * u64_to_vec2_table_create(const char * optional_name);
void u64_to_vec2_table_set(u64_to_vec2_table * table, u64 key, f32 x, f32 y);
void u64_to_vec2_table_insert(u64_to_vec2_table * table, u64 * key, f32 * x, f32 * y, size_t count);
void u64_to_vec2_table_lookup(u64_to_vec2_table * table, u64 * keys, size_t * out_indexes, size_t count);
void u64_to_vec2_table_remove(u64_to_vec2_table * table, u64 * keys, size_t key_count);
void u64_to_vec2_table_clear(u64_to_vec2_table * table);
void u64_to_vec2_table_unset(u64_to_vec2_table * table, u64 key);
bool u64_to_vec2_table_try_get(u64_to_vec2_table * table, u64 * key, f32 * x, f32 * y);
void u64_to_vec2_table_print(u64_to_vec2_table * table);
size_t u64_to_vec2_table_iter(u64_to_vec2_table * table, u64 * keys, size_t keycnt, u64 * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
